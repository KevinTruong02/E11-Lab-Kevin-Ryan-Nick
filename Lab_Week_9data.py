# -*- coding: utf-8 -*-
"""week9data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fYCS6xalRXRgg6SonpXGyn2-WbvTXXRa
"""

import RPi.GPIO as GPIO
import time
from datetime import datetime
import argparse


parser = argparse.ArgumentParser(description='Radiation event logger')
parser.add_argument('--runtime', type=int, default=0, help='Duration to run the script in minutes. 0 for indefinite runtime.')
parser.add_argument('--output', type=str, default='radiation_counts.txt', help='Filename for saving the output.')
args = parser.parse_args()


sensor_pin = 17
GPIO.setmode(GPIO.BCM)
GPIO.setup(sensor_pin, GPIO.IN, pull_up_down=GPIO.PUD_UP)


count = 0
start_time = time.time()


def event_detected(channel):
    global count
    count += 1
    print(f"Event detected at: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")


GPIO.add_event_detect(sensor_pin, GPIO.FALLING, callback=event_detected, bouncetime=100)
current_time = start_time
def main_loop():
    global count
    initial_time = time.time()
    while True:
        current_time = time.time()

        if args.runtime > 0 and (current_time - initial_time) / 60 > args.runtime:
            break
        if current_time - start_time >= 60:
            print(f"Total counts in the last minute: {count}")
            with open(args.output, 'a') as file:
                file.write(f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}, Counts: {count}\n")
            count = 0

try:
    main_loop()
except KeyboardInterrupt:
    print("Program terminated by user.")
finally:
    GPIO.cleanup()
